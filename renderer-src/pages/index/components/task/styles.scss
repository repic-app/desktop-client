@import "~scssinc";

.component-task-item{
  position: relative;
  display: flex;
  flex-direction: row;
  align-items: center;
  height: 60px;
  margin-left: 15px;
  &::after{
    position: absolute;
    right: 0;
    bottom: 0;
    left: 60px;
    height: 1px;
    box-shadow: inset 0 -.5px 0 0 rgba(#fff, .08);
    content: '';
  }
  &:last-child::after{
    content: none;
  }
  &[data-status="0"],
  &[data-status="1"],
  &[data-status="2"]{
    .operates{
      .button-restore,
      .button-compare,
      .button-recompress{
        opacity: .3;
        pointer-events: none;
      }
    }
  }
  &[data-status="3"]{
    .operates{
      .button-recompress{
        opacity: .3;
        pointer-events: none;
      }
    }
  }
  &[data-status="4"]{
    .operates{
      .button-restore,
      .button-compare{
        opacity: .3;
        pointer-events: none;
      }
    }
  }
  &[data-status="5"]{
    .operates{
      .button-restore,
      .button-compare{
        opacity: .3;
        pointer-events: none;
      }
    }
  }
  .status-icon{
    width: 6px;
    height: 40px;
    margin-right: 10px;
    i{
      display: block;
      box-sizing: border-box;
      width: 6px;
      height: 6px;
      margin: 17px 0;
      background-color: rgba(#fff, .2);
      border-radius: 50%;
      &[data-status="2"]{ //PROCESSING
        width: 8px;
        height: 8px;
        margin: 16px 0 0 -1px;
        background-color: transparent;
        border: solid 1px $COLOR_PRIMARY;
        border-bottom-color: transparent;
        animation: spinning infinite 1s;
      }
      &[data-status="3"]{ //COMPLETE
        background-color: $COLOR_SUCCESS;
      }
      &[data-status="4"]{ //FAIL
        background-color: $COLOR_DANGER;
      }
      &[data-status="5"]{ //RESTORED
        background-color: $COLOR_WARNING;
      }
    }
  }
  .thumb{
    box-sizing: border-box;
    width: 32px;
    height: 32px;
    margin-right: 12px;
    overflow: hidden;
    background-color: rgba(#fff, .5);
    object-fit: cover;
    -webkit-user-drag: none;
    & + .meta .name{
      max-width: 12rem;
    }
  }
  .thumb-holder{
    display: block;
    color: rgba(#fff, .5);
    font-size: 12px;
    line-height: 32px;
    text-align: center;
  }
  .meta{
    flex: 1;
    margin-top: -1px;
    overflow: hidden;
    user-select: none;
    .name{
      display: block;
      max-width: 18em;
      overflow: hidden;
      color: rgba(#fff, .8);
      font-size: 11px;
      line-height: 14px;
      text-overflow: ellipsis;
      text-transform: uppercase;
      white-space: nowrap;
    }
    .description-text{
      display: flex;
      color: rgba(#fff, .4);
      font-size: 10px;
      i{
        padding: 0 3px;
      }
      .optimize-rate{
        padding-left: 5px;
      }
    }
  }
  .operates{
    display: flex;
    flex-direction: row;
    margin-right: 10px;
    .button{
      display: block;
      width: 26px;
      height: 26px;
      margin-left: 5px;
      background-color: rgba(#000, .2);
      border-radius: 50%;
      color: rgba(#fff, .5);
      font-size: 13px;
      line-height: 26px;
      text-align: center;
      cursor: pointer;
      &:hover{
        background-color: rgba(#000, .4);
      }
    }
  }
}

.light-style .component-task-item{
  &::after{
    box-shadow: inset 0 -.5px 0 0 rgba(#000, .15);
  }
  .status-icon{
    .mdi-clock{
      color: #ccc;
    }
  }
  .thumb{
    background-color: #fff;
  }
  .thumb-holder{
    color: #ccc;
  }
  .meta{
    .name{
      color: #333;
    }
    .description-text{
      color: #666;
    }
  }
  .operates{
    .button{
      background-color: rgba(#fff, 1);
      color: #999;
      &:hover{
        background-color: rgba(#fff, .8);
      }
    }
  }
}